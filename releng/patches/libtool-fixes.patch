From 00d66d4264723326a258653e09977a5c0060a219 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ole=20Andr=C3=A9=20Vadla=20Ravn=C3=A5s?=
 <ole.andre.ravnas@tillitech.com>
Date: Mon, 30 Mar 2015 14:38:46 +0200
Subject: [PATCH 1/7] libtool.m4: fix missing initialization.

The `prev` variable is used uninitialized for the first loop iteration.
---
 m4/libtool.m4 | 1 +
 1 file changed, 1 insertion(+)

diff --git a/m4/libtool.m4 b/m4/libtool.m4
index a3bc337..a49d486 100644
--- a/m4/libtool.m4
+++ b/m4/libtool.m4
@@ -7528,6 +7528,7 @@ if AC_TRY_EVAL(ac_compile); then
   # the conftest object file.
   pre_test_object_deps_done=no
 
+  prev=
   for p in `eval "$output_verbose_link_cmd"`; do
     case $prev$p in
 
-- 
2.2.1

From 25825b304a5cb75d046a660da91fc0e33b7d0cd3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ole=20Andr=C3=A9=20Vadla=20Ravn=C3=A5s?=
 <ole.andre.ravnas@tillitech.com>
Date: Mon, 30 Mar 2015 14:45:00 +0200
Subject: [PATCH 2/7] libtool.m4: fix space logic in flag detection.

This is a regression introduced by a53d6cc4.
---
 m4/libtool.m4 | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/m4/libtool.m4 b/m4/libtool.m4
index a49d486..b6f5e91 100644
--- a/m4/libtool.m4
+++ b/m4/libtool.m4
@@ -7535,8 +7535,8 @@ if AC_TRY_EVAL(ac_compile); then
     -L* | -R* | -l*)
        # Some compilers place space between "-{L,R}" and the path.
        # Remove the space.
-       if test x-L = "$p" ||
-          test x-R = "$p"; then
+       if test x-L = "x$p" ||
+          test x-R = "x$p"; then
 	 prev=$p
 	 continue
        fi
-- 
2.2.1

From cef307760b53d39c0640e180df54e5a59bd861c3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ole=20Andr=C3=A9=20Vadla=20Ravn=C3=A5s?=
 <ole.andre.ravnas@tillitech.com>
Date: Mon, 30 Mar 2015 15:31:55 +0200
Subject: [PATCH 3/7] libtool.m4: preserve static vs. dynamic postdeps.

This makes it possible to specify flags like `-static-libstdc++` without
the `-Bstatic` getting dropped by libtool.
---
 build-aux/ltmain.in |  5 +++++
 m4/libtool.m4       | 34 ++++++++++++++++++++++++++++++++--
 2 files changed, 37 insertions(+), 2 deletions(-)

diff --git a/build-aux/ltmain.in b/build-aux/ltmain.in
index d5cf07a..8fe3565 100644
--- a/build-aux/ltmain.in
+++ b/build-aux/ltmain.in
@@ -5708,6 +5708,11 @@ func_mode_link ()
 	  fi
 	  continue
 	  ;;
+	-Bstatic|-Bdynamic)
+	  deplibs="$deplib $deplibs"
+	  test lib = "$linkmode" && newdependency_libs="$deplib $newdependency_libs"
+	  continue
+	  ;;
 	-l*)
 	  if test lib != "$linkmode" && test prog != "$linkmode"; then
 	    func_warning "'-l' is ignored for archives/objects"
diff --git a/m4/libtool.m4 b/m4/libtool.m4
index b6f5e91..f7f4200 100644
--- a/m4/libtool.m4
+++ b/m4/libtool.m4
@@ -7528,6 +7528,10 @@ if AC_TRY_EVAL(ac_compile); then
   # the conftest object file.
   pre_test_object_deps_done=no
 
+  # Preserve the desired link mode, typically influenced by flags
+  # like -static-libgcc, -static-libstdc++, etc.
+  link_mode=default
+
   prev=
   for p in `eval "$output_verbose_link_cmd"`; do
     case $prev$p in
@@ -7568,21 +7572,43 @@ if AC_TRY_EVAL(ac_compile); then
 	 # linked, so don't bother handling this case.
 	 esac
        else
+	 s=$prev$p
+
+	 case $link_mode in
+	 static_pending)
+	   s="-Bstatic $s"
+	   link_mode=static
+	   ;;
+	 dynamic_pending)
+	   s="-Bdynamic $s"
+	   link_mode=dynamic
+	   ;;
+	 esac
+
 	 if test -z "$_LT_TAGVAR(postdeps, $1)"; then
-	   _LT_TAGVAR(postdeps, $1)=$prev$p
+	   _LT_TAGVAR(postdeps, $1)=$s
 	 else
-	   _LT_TAGVAR(postdeps, $1)="${_LT_TAGVAR(postdeps, $1)} $prev$p"
+	   _LT_TAGVAR(postdeps, $1)="${_LT_TAGVAR(postdeps, $1)} $s"
 	 fi
        fi
        prev=
        ;;
 
+    -Bstatic)
+      link_mode=static_pending
+      ;;
+
+    -Bdynamic)
+      link_mode=dynamic_pending
+      ;;
+
     *.lto.$objext) ;; # Ignore GCC LTO objects
     *.$objext)
        # This assumes that the test object file only shows up
        # once in the compiler output.
        if test "$p" = "conftest.$objext"; then
 	 pre_test_object_deps_done=yes
+	 link_mode=default
 	 continue
        fi
 
@@ -7606,6 +7632,10 @@ if AC_TRY_EVAL(ac_compile); then
     esac
   done
 
+  if test static = "$link_mode"; then
+    _LT_TAGVAR(postdeps, $1)="${_LT_TAGVAR(postdeps, $1)} -Bdynamic"
+  fi
+
   # Clean up.
   rm -f a.out a.exe
 else
-- 
2.2.1

From a3376cb02dd44010c53f0695b67ddb0d2cfb8673 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ole=20Andr=C3=A9=20Vadla=20Ravn=C3=A5s?=
 <ole.andre.ravnas@tillitech.com>
Date: Mon, 30 Mar 2015 17:26:44 +0200
Subject: [PATCH 4/7] libtool: get rid of excessive sed forks.

Based on patch by Harald Hoyer:
http://lists.gnu.org/archive/html/bug-libtool/2015-03/msg00001.html
---
 bootstrap               | 10 +++++++++-
 build-aux/ltmain.in     |  6 +++++-
 build-aux/funclib.sh | 10 +++++++++-
 3 files changed, 23 insertions(+), 3 deletions(-)

diff --git a/bootstrap b/bootstrap
index 4596413..d9952b5 100755
--- a/bootstrap
+++ b/bootstrap
@@ -1275,7 +1275,15 @@ func_quote_for_eval ()
     while test 0 -lt $#; do
       case $1 in
         *[\\\`\"\$]*)
-	  _G_unquoted_arg=`printf '%s\n' "$1" |$SED "$sed_quote_subst"` ;;
+          if test set = "${BASH_VERSION+set}"; then
+            _G_unquoted_arg=${1//\\/\\\\}
+            _G_unquoted_arg=${_G_unquoted_arg//\"/\\\"}
+            _G_unquoted_arg=${_G_unquoted_arg//\$/\\\$}
+            _G_unquoted_arg=${_G_unquoted_arg//\`/\\\`}
+          else
+            _G_unquoted_arg=`printf '%s\n' "$1" |$SED "$sed_quote_subst"`
+          fi
+          ;;
         *)
           _G_unquoted_arg=$1 ;;
       esac
diff --git a/build-aux/ltmain.in b/build-aux/ltmain.in
index 8fe3565..1cc1e82 100644
--- a/build-aux/ltmain.in
+++ b/build-aux/ltmain.in
@@ -3346,7 +3346,11 @@ else
   if test \"\$libtool_execute_magic\" != \"$magic\"; then
     file=\"\$0\""
 
-    qECHO=`$ECHO "$ECHO" | $SED "$sed_quote_subst"`
+    if test set = "${BASH_VERSION+set}"; then
+      qECHO=$(_G=$($ECHO "$ECHO");_G=${_G//\\/\\\\};_G=${_G//\"/\\\"};_G=${_G//\$/\\\$};_G=${_G//\`/\\\`};printf '%s\n' "$_G")
+    else
+      qECHO=`$ECHO "$ECHO" | $SED "$sed_quote_subst"`
+    fi
     $ECHO "\
 
 # A function that is used when there is no print builtin or printf.
diff --git a/build-aux/funclib.sh b/build-aux/funclib.sh
index 39d972e..bd69802 100644
--- a/build-aux/funclib.sh
+++ b/build-aux/funclib.sh
@@ -1044,7 +1044,15 @@ func_quote_for_eval ()
     while test 0 -lt $#; do
       case $1 in
         *[\\\`\"\$]*)
-	  _G_unquoted_arg=`printf '%s\n' "$1" |$SED "$sed_quote_subst"` ;;
+          if test set = "${BASH_VERSION+set}"; then
+            _G_unquoted_arg=${1//\\/\\\\}
+            _G_unquoted_arg=${_G_unquoted_arg//\"/\\\"}
+            _G_unquoted_arg=${_G_unquoted_arg//\$/\\\$}
+            _G_unquoted_arg=${_G_unquoted_arg//\`/\\\`}
+          else
+            _G_unquoted_arg=`printf '%s\n' "$1" |$SED "$sed_quote_subst"`
+          fi
+          ;;
         *)
           _G_unquoted_arg=$1 ;;
       esac
-- 
2.2.1

From 73eb6df92a588b826d10c8ed48b298332c653c0d Mon Sep 17 00:00:00 2001
From: Mike Frysinger <vapier@gentoo.org>
Date: Mon, 16 Mar 2015 18:18:29 -0400
Subject: [PATCH 5/7] libtool: pass through -fuse-ld flags.

Starting with gcc-4.8, there's a -fuse-ld flag that can be used to select
between bfd & gold.  Make sure we pass it through to the linking stage.

* build-aux/ltmain.in (func_mode_link): Pass -fuse-ld=* flags through.
---
 build-aux/ltmain.in | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/build-aux/ltmain.in b/build-aux/ltmain.in
index 1cc1e82..c1d98bd 100644
--- a/build-aux/ltmain.in
+++ b/build-aux/ltmain.in
@@ -5364,10 +5364,12 @@ func_mode_link ()
       # -tp=*                Portland pgcc target processor selection
       # --sysroot=*          for sysroot support
       # -O*, -g*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization
+      # -fuse-ld=*           Linker select flags for GCC
       # -stdlib=*            select c++ std lib with clang
       -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \
       -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \
-      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*)
+      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*| \
+      -fuse-ld=*)
         func_quote_for_eval "$arg"
 	arg=$func_quote_for_eval_result
         func_append compile_command " $arg"
-- 
2.2.1

From a1cc45ba433d3de13215364f66b3e205c59c5c08 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ole=20Andr=C3=A9=20Vadla=20Ravn=C3=A5s?=
 <ole.andre.ravnas@tillitech.com>
Date: Mon, 30 Mar 2015 17:51:01 +0200
Subject: [PATCH 6/7] libtool: pass through -fsanitize flags.

Recent versions of GCC and Clang provide an -fsanitize flag that can be
used to generate additional runtime checks.

* build-aux/ltmain.in (func_mode_link): Pass -fsanitize=* flags through.
---
 build-aux/ltmain.in | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/build-aux/ltmain.in b/build-aux/ltmain.in
index c1d98bd..84f7084 100644
--- a/build-aux/ltmain.in
+++ b/build-aux/ltmain.in
@@ -5360,6 +5360,7 @@ func_mode_link ()
       # -F/path              path to uninstalled frameworks, gcc on darwin
       # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC
       # -fstack-protector*   stack protector flags for GCC
+      # -fsanitize=*         sanitizer flags for GCC/Clang
       # @file                GCC response files
       # -tp=*                Portland pgcc target processor selection
       # --sysroot=*          for sysroot support
@@ -5369,7 +5370,7 @@ func_mode_link ()
       -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \
       -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \
       -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*| \
-      -fuse-ld=*)
+      -fuse-ld=*|-fsanitize=*)
         func_quote_for_eval "$arg"
 	arg=$func_quote_for_eval_result
         func_append compile_command " $arg"
-- 
2.2.1

From ba1ecd5fc3883ab757d0a177ae53e78ec6222f9e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ole=20Andr=C3=A9=20Vadla=20Ravn=C3=A5s?=
 <ole.andre.ravnas@tillitech.com>
Date: Mon, 30 Mar 2015 18:32:22 +0200
Subject: [PATCH 7/7] libtool.m4: add support for Android conventions.

Based on patch by @mbernasocchi.
---
 m4/libtool.m4 | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/m4/libtool.m4 b/m4/libtool.m4
index f7f4200..efb99f9 100644
--- a/m4/libtool.m4
+++ b/m4/libtool.m4
@@ -2841,8 +2841,17 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_lib_prefix=no
   need_version=no
-  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
-  soname_spec='$libname$release$shared_ext$major'
+  case $host_os in
+  # This must be Linux Android ELF which has no support for versioned libs.
+  linux-android*)
+    library_names_spec='$libname$shared_ext'
+    soname_spec='$libname$shared_ext'
+    ;;
+  *)
+     library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+     soname_spec='$libname$release$shared_ext$major'
+    ;;
+  esac
   finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=no
-- 
2.2.1

